syntax = "proto3";

package netflow;

service annotator {
  rpc Annotate (Flow) returns (Flow) {}
}

// Pfx defines an IP prefix
message pfx {
    // IPv4 or IPv6 address
    bytes IP = 1;
    // Netmask
    bytes mask = 2;
}

// Flow defines a network flow
message Flow {
  // Router flow was received from
  bytes router = 1;

  // Address family
  uint32 family = 2;

  // SRC IP address
  bytes src_addr =3;

  // DST IP address
  bytes dst_addr = 4;

  // Protocol
  uint32 protocol = 5;

  // Number of packets
  uint32 packets = 6;

  // Size of flow
  uint64 size = 7;

  // SNMP interface id flow was received on
  uint32 int_in = 8;

  // SNMP interface if flow was transmitted on
  uint32 int_out = 9;

  // Next Hop IP address
  bytes next_hop = 10;

  // SRC ASN
  uint32 src_as = 11;

  // DST ASN
  uint32 dst_as = 12;

  // NEXT HOP ASN
  uint32 next_hop_as = 13;

  // Unix timestamp
  int64 timestamp = 14;

  // SRC prefix
  pfx src_pfx = 15;

  // DST perfix
  pfx dst_pfx = 16;

  // SRC port
  uint32 src_port = 17;

  //DST port
  uint32 dst_port = 18;

  //Samplerate
  uint64 samplerate = 19;
}

// Intf groups an interfaces ID and name
message Intf {
    // ID is an interface ID
    uint32 id = 1;

    // name is an interfaces name
    string name = 2;
}

// Flows defines a groups of flows
message Flows {
    // Group of flows
    repeated Flow flows = 1;
    
    // Mapping of interface names to IDs
    repeated Intf interface_mapping = 2;
}